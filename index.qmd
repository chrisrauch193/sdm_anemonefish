---
title: "Anemonefish-Host Mutualism: Climate Change Impacts and Distributional Relationships"
format: html
editor: visual
execute:
  echo: true
  warning: false
  message: false
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width=9, fig.height=7, fig.align = 'center')

# Load necessary packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(terra, sf, dplyr, tidyr, ggplot2, readr,
               vegan, # For varpart
               glmmTMB, emmeans, # For LMMs
               ENMeval, # For Schoener's D
               corrplot, # For correlation matrices
               phytools, picante, # For phylogenetic analyses
               ENMTools, # For niche breadth
               stringr, tools, # General utilities
               log4r # For logging if desired, though direct cat() is also used here
)

# Load your project configuration
source("scripts/config.R")
if (!exists("config")) stop("Configuration file 'config.R' not found or 'config' object not created.")

# Source post-analysis helpers
source("scripts/helpers/post_analysis_helpers.R")


# Define consistent species group names for plot labels etc.
host_group_label <- "Host Anemones"
fish_group_label <- "Anemonefish"

# Species lists
host_species_df <- readr::read_csv(config$anemone_species_list_file)
fish_species_df <- readr::read_csv(config$anemonefish_species_list_file)
fish_species_sanitized_names <- gsub(" ", "_", fish_species_df$scientificName) # Used often

# Association data
associations_df <- readr::read_csv(config$anemone_fish_association_file)

# Get current climate PCA rasters (used in multiple sections)
pca_paths_list <- readRDS(config$pca_raster_paths_rds_path)
current_pca_rasters <- terra::rast(pca_paths_list[["current"]])
num_pcs_to_use <- min(config$n_pca_components, terra::nlyr(current_pca_rasters))
names(current_pca_rasters) <- paste0("PC", 1:terra::nlyr(current_pca_rasters))
current_pca_rasters_subset <- current_pca_rasters[[1:num_pcs_to_use]]

# Path for saving plots from this analysis (optional, can also just display inline)
analysis_plot_dir <- file.path(config$log_dir_base, "post_analysis_plots_and_tables")
dir.create(analysis_plot_dir, showWarnings = FALSE, recursive = TRUE)

# Common Indo-Pacific extent for plotting if needed (from config)
ip_bbox <- sf::st_bbox(c(xmin=config$indo_pacific_bbox[1], ymin=config$indo_pacific_bbox[3],
                         xmax=config$indo_pacific_bbox[2], ymax=config$indo_pacific_bbox[4]),
                       crs = "EPSG:4326")
ip_poly_sf <- sf::st_as_sfc(ip_bbox)

cat("Setup complete. Analysis outputs will be generated.\n")
```

## Distributional Relationship between Anemonefish and Host Sea Anemones

This section explores the spatial correlation and shared environmental drivers between anemonefish and their host sea anemones under current climatic conditions.

```{r richness-stacking-and-correlation}
cat("\n--- Section: Distributional Relationship ---\n")

# Suffix for host models (assuming PCA was used for hosts in 06a)
host_model_suffix <- ifelse(config$use_pca_predictors, "_pca", "_vif") 

# Stack Current Host Anemone Predictions for Richness
host_richness_sum_current <- stack_richness(
  species_df = host_species_df,
  base_pred_dir = config$target_predictions_current_dir, # Prediction rasters are directly here
  scenario_name = "current",
  model_suffix = host_model_suffix,
  config = config,
  log_func = cat
)
if (is.null(host_richness_sum_current)) stop("Failed to create current host richness layer.")
names(host_richness_sum_current) <- "HostRichness"
# plot(host_richness_sum_current, main = "Host Anemone Richness (Current)")

# Suffix for anemonefish env-only models (from 06b)
fish_env_only_model_suffix <- ifelse(config$use_pca_predictors, "_pca", "_vif")

# Stack Current Anemonefish Predictions for Richness (Env-Only Models from 06b)
fish_richness_sum_current_env_only <- stack_richness(
  species_df = fish_species_df,
  base_pred_dir = config$target_predictions_current_dir, # Prediction rasters are directly here
  scenario_name = "current",
  model_suffix = fish_env_only_model_suffix,
  config = config,
  log_func = cat
)
if (is.null(fish_richness_sum_current_env_only)) stop("Failed to create current anemonefish (env-only) richness layer.")
names(fish_richness_sum_current_env_only) <- "FishRichnessEnvOnly"
# plot(fish_richness_sum_current_env_only, main = "Anemonefish Richness (Current, Env-Only)")

# --- Combine for Analysis & Resample if necessary ---
# Ensure all rasters for combined analysis are aligned
# Use host richness as the reference geometry
ref_geom <- host_richness_sum_current 
if (!terra::compareGeom(fish_richness_sum_current_env_only, ref_geom, stopOnError=FALSE, res=TRUE)) {
  cat("Resampling anemonefish richness to match host richness geometry.\n")
  fish_richness_sum_current_env_only <- terra::resample(fish_richness_sum_current_env_only, ref_geom)
}
if (!terra::compareGeom(current_pca_rasters_subset, ref_geom, stopOnError=FALSE, res=TRUE)) {
  cat("Resampling PCA rasters to match host richness geometry.\n")
  current_pca_rasters_subset <- terra::resample(current_pca_rasters_subset, ref_geom)
}

combined_analysis_stack <- c(host_richness_sum_current, fish_richness_sum_current_env_only, current_pca_rasters_subset)
# plot(combined_analysis_stack, nc = 3) # Quick check

# --- Sample Points & Extract Values ---
cat("Sampling points and extracting values for richness correlation and variance partitioning...\n")
set.seed(123)
sample_points_df <- terra::spatSample(ref_geom, size = 5000, method = "random", na.rm = TRUE, xy = TRUE)
sampled_values_df <- terra::extract(combined_analysis_stack, sample_points_df[, c("x","y")], ID = FALSE)
sampled_values_df <- na.omit(sampled_values_df)

if(nrow(sampled_values_df) < 10) stop("Less than 10 valid sampled points for analysis.")
cat("  Number of points for analysis:", nrow(sampled_values_df), "\n")

# --- Pearson Correlation ---
richness_cor_test <- cor.test(sampled_values_df$FishRichnessEnvOnly, sampled_values_df$HostRichness)
cat("\nPearson Correlation between Anemonefish Richness (Env-Only) and Host Richness (Current):\n")
print(richness_cor_test)

# --- Variance Partitioning ---
climate_df_for_varpart <- sampled_values_df[, paste0("PC", 1:num_pcs_to_use)]
var_part_result <- tryCatch({
  vegan::varpart(sampled_values_df$FishRichnessEnvOnly, 
                 sampled_values_df$HostRichness, 
                 climate_df_for_varpart)
}, error = function(e) {
  cat("ERROR in varpart:", e$message, "\n"); NULL
})

if (!is.null(var_part_result)) {
  cat("\nVariance Partitioning for Anemonefish Richness (Env-Only) explained by Host Richness and Climate (PCs):\n")
  print(var_part_result)
  
  png(file.path(analysis_plot_dir, "varpart_fish_host_climate.png"), width=7, height=7, units="in", res=300)
  plot(var_part_result, 
       bg = c("skyblue", "lightcoral"), 
       Xnames = c("Host Anemone\nRichness", paste0("Climate\n(PC1-PC", num_pcs_to_use, ")")),
       main = "Variance Partitioning: Anemonefish Richness"
       )
  dev.off()
  cat("Variance partitioning plot saved.\n")
}

# Clean up
rm(host_richness_sum_current, fish_richness_sum_current_env_only, sample_points_df, sampled_values_df, climate_df_for_varpart)
gc()
```

## Anemonefish SDM Performance with Host Information

This section evaluates whether incorporating host sea anemone distribution data (as a richness layer) improves the predictive performance of Species Distribution Models (SDMs) for anemonefish, compared to models based solely on environmental variables or solely on host distribution.

**NOTE:** For the "Host Only" models, ensure that script `06c_run_sdm_anemonefish_biotic_only.R` was correctly modified and run to produce models using *only* the host suitability layer as a predictor. The results here depend on that.

```{r sdm-performance-comparison}
cat("\n--- Section: Anemonefish SDM Performance Comparison ---\n")

# Suffixes and path patterns for different model types
fish_env_only_suffix <- ifelse(config$use_pca_predictors, "_pca", "_vif")
fish_host_only_suffix <- "_host_only" # Make sure this matches your modified 06c output
fish_combined_suffix <- "_combined_pca"

model_types_info_fish <- list(
  EnvOnly = list(
    label = "Environment Only",
    suffix = fish_env_only_suffix,
    path_subdir = paste0("anemonefish", fish_env_only_suffix)
  ),
  HostOnly = list( # Ensure 06c was run with this suffix and actual host-only predictors
    label = "Host Suitability Only",
    suffix = fish_host_only_suffix,
    path_subdir = paste0("anemonefish", fish_host_only_suffix) 
  ),
  EnvPlusHost = list(
    label = "Environment + Host",
    suffix = fish_combined_suffix,
    path_subdir = paste0("anemonefish", fish_combined_suffix)
  )
)

all_fish_cv_results_list <- list()

for (type_key in names(model_types_info_fish)) {
  info <- model_types_info_fish[[type_key]]
  target_cv_dir <- file.path(config$target_results_base, info$path_subdir)
  cat("Looking for CV results in:", target_cv_dir, "for type:", info$label, "\n")
  
  for (sp_sanitized in fish_species_sanitized_names) {
    # CV files are named CV_Results_SpeciesName.csv in the respective subdirectories
    cv_file <- file.path(target_cv_dir, paste0("CV_Results_", sp_sanitized, ".csv"))
    
    if (file.exists(cv_file)) {
      df_cv <- tryCatch(readr::read_csv(cv_file, show_col_types = FALSE), error = function(e){
        warning("Failed to read CV file: ", cv_file, " Error: ", e$message); NULL
      })
      if(is.null(df_cv)) next
      
      # Each row in SDMtune CV results is a hyperparameter combination.
      # For this comparison, we use all folds' test_AUC for each species's model type.
      # The PDF paper's Fig 2 shows boxplots of 40 model runs per species per type.
      # Your current setup with SDMtune likely has fewer 'runs' per se in the CV_results file,
      # but multiple folds for hyperparameter tuning. We'll use the test_AUC from each fold.
      
      if ("test_AUC" %in% names(df_cv)) {
        df_cv_select <- df_cv %>% 
          dplyr::select(test_AUC) %>% 
          dplyr::mutate(species = sp_sanitized, type = info$label)
        all_fish_cv_results_list[[length(all_fish_cv_results_list) + 1]] <- df_cv_select
      } else {
        warning(paste("Column 'test_AUC' not found in", cv_file))
      }
    } else {
      warning("CV results file not found for '", sp_sanitized, "' type '", info$label, "': ", cv_file)
    }
  }
}

if (length(all_fish_cv_results_list) > 0) {
  combined_fish_cv_df <- dplyr::bind_rows(all_fish_cv_results_list)
  
  if (nrow(combined_fish_cv_df) > 0 && "test_AUC" %in% names(combined_fish_cv_df)) {
    combined_fish_cv_df$type <- factor(combined_fish_cv_df$type, levels = c("Environment Only", "Host Suitability Only", "Environment + Host"))
    combined_fish_cv_df$species_short <- gsub("Amphiprion_", "A._", combined_fish_cv_df$species) # For plotting
    
    # --- LMM Comparison (similar to PDF) ---
    # The PDF used coef = 0.014 for EFN+Climate vs Climate, and -0.04 for EFN-only vs Climate
    # This implies a baseline model (Climate-Only) and then testing addition/replacement.
    
    # Model 1: Environment + Host vs Environment Only
    df_env_combined <- combined_fish_cv_df %>% dplyr::filter(type %in% c("Environment Only", "Environment + Host"))
    if(nrow(df_env_combined) > 0 && length(unique(df_env_combined$type)) == 2) {
      lmm_auc_env_vs_combined <- tryCatch({
        glmmTMB::glmmTMB(test_AUC ~ type + (1|species), data = df_env_combined, na.action = na.omit,
                         control = glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS"))) # Added optimizer for potential convergence
      }, error = function(e){warning("LMM for Env vs Combined AUC failed: ", e$message); NULL})
      if(!is.null(lmm_auc_env_vs_combined)){
        cat("\nLMM Results: Env-Only vs Env+Host (Anemonefish SDMs):\n")
        print(summary(lmm_auc_env_vs_combined))
      }
    } else { cat("Not enough data for LMM: Env-Only vs Env+Host.\n") }

    # Model 2: Environment Only vs Host Only (if HostOnly data exists)
    df_env_hostonly <- combined_fish_cv_df %>% dplyr::filter(type %in% c("Environment Only", "Host Suitability Only"))
     if(nrow(df_env_hostonly) > 0 && length(unique(df_env_hostonly$type)) == 2) {
      lmm_auc_env_vs_hostonly <- tryCatch({
        glmmTMB::glmmTMB(test_AUC ~ type + (1|species), data = df_env_hostonly, na.action = na.omit,
                         control = glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS")))
      }, error = function(e){warning("LMM for Env vs Host-Only AUC failed: ", e$message); NULL})
        if(!is.null(lmm_auc_env_vs_hostonly)){
        cat("\nLMM Results: Env-Only vs Host-Only (Anemonefish SDMs):\n")
        print(summary(lmm_auc_env_vs_hostonly))
      }
    } else { cat("Not enough data for LMM: Env-Only vs Host-Only. Ensure 'Host Suitability Only' models ran and results exist.\n") }


    # --- Boxplot (PDF Figure 2 adaptation) ---
    fish_auc_comparison_plot <- ggplot(combined_fish_cv_df, aes(x = reorder(species_short, test_AUC, FUN = median, na.rm=TRUE), y = test_AUC, fill = type)) +
      geom_boxplot(position = position_dodge(0.9), outlier.size = 0.5) +
      stat_summary(fun = mean, geom = "point", shape = 23, size = 2, fill = "red", 
                   position = position_dodge(0.9), aes(group = type), show.legend = FALSE) +
      labs(title = "Anemonefish SDM Performance: Test AUC by Model Type",
           x = "Anemonefish Species",
           y = "Test AUC (Predictive Accuracy)") +
      scale_fill_manual(name = "Model Predictors", 
                        values = c("Environment Only" = "grey80", "Host Suitability Only" = "lightpink", "Environment + Host" = "lightblue"),
                        labels = c("Climate PCA", "Max Host Suitability Only", "Climate PCA + Max Host Suitability")) +
      theme_bw(base_size = 10) +
      theme(axis.text.x = element_text(angle = 45, hjust = 1, size=8),
            legend.position = "top",
            panel.grid.major.x = element_blank(),
            panel.grid.minor.x = element_blank()) +
      coord_cartesian(ylim = c(min(0.5, min(combined_fish_cv_df$test_AUC, na.rm=TRUE)), 1.0)) # Set y-axis limits

    print(fish_auc_comparison_plot)
    ggsave(file.path(analysis_plot_dir, "anemonefish_sdm_auc_comparison_fig2_style.png"), fish_auc_comparison_plot, width = 14, height = 8, dpi = 300)
    cat("Anemonefish AUC comparison plot saved.\n")

  } else {
    warning("Column 'test_AUC' not found in combined CV results for LMM or plotting.")
  }
} else {
  warning("No CV results were successfully gathered for anemonefish model comparison. Check paths and ensure model outputs (CV_results_*.csv) exist for all types in the `target_results_base` subdirectories.")
}
```
